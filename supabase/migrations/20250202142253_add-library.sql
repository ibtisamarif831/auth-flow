create table "public"."library_books" (
    "id" uuid not null default gen_random_uuid(),
    "metadata" jsonb,
    "file_path" text not null,
    "file_type" text,
    "price" numeric not null,
    "created_at" timestamp with time zone default now()
);


create table "public"."purchases" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "library_book_id" uuid default gen_random_uuid(),
    "user_id" uuid default gen_random_uuid(),
    "transaction_details" jsonb
);


alter table "public"."purchases" enable row level security;

CREATE UNIQUE INDEX library_books_pkey ON public.library_books USING btree (id);

CREATE UNIQUE INDEX purchases_pkey ON public.purchases USING btree (id);

alter table "public"."library_books" add constraint "library_books_pkey" PRIMARY KEY using index "library_books_pkey";

alter table "public"."purchases" add constraint "purchases_pkey" PRIMARY KEY using index "purchases_pkey";

alter table "public"."library_books" add constraint "library_books_file_type_check" CHECK ((file_type = ANY (ARRAY['ebook'::text, 'audiobook'::text]))) not valid;

alter table "public"."library_books" validate constraint "library_books_file_type_check";

alter table "public"."purchases" add constraint "purchases_library_book_id_fkey" FOREIGN KEY (library_book_id) REFERENCES library_books(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."purchases" validate constraint "purchases_library_book_id_fkey";

alter table "public"."purchases" add constraint "purchases_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."purchases" validate constraint "purchases_user_id_fkey";

grant delete on table "public"."library_books" to "anon";

grant insert on table "public"."library_books" to "anon";

grant references on table "public"."library_books" to "anon";

grant select on table "public"."library_books" to "anon";

grant trigger on table "public"."library_books" to "anon";

grant truncate on table "public"."library_books" to "anon";

grant update on table "public"."library_books" to "anon";

grant delete on table "public"."library_books" to "authenticated";

grant insert on table "public"."library_books" to "authenticated";

grant references on table "public"."library_books" to "authenticated";

grant select on table "public"."library_books" to "authenticated";

grant trigger on table "public"."library_books" to "authenticated";

grant truncate on table "public"."library_books" to "authenticated";

grant update on table "public"."library_books" to "authenticated";

grant delete on table "public"."library_books" to "service_role";

grant insert on table "public"."library_books" to "service_role";

grant references on table "public"."library_books" to "service_role";

grant select on table "public"."library_books" to "service_role";

grant trigger on table "public"."library_books" to "service_role";

grant truncate on table "public"."library_books" to "service_role";

grant update on table "public"."library_books" to "service_role";

grant delete on table "public"."purchases" to "anon";

grant insert on table "public"."purchases" to "anon";

grant references on table "public"."purchases" to "anon";

grant select on table "public"."purchases" to "anon";

grant trigger on table "public"."purchases" to "anon";

grant truncate on table "public"."purchases" to "anon";

grant update on table "public"."purchases" to "anon";

grant delete on table "public"."purchases" to "authenticated";

grant insert on table "public"."purchases" to "authenticated";

grant references on table "public"."purchases" to "authenticated";

grant select on table "public"."purchases" to "authenticated";

grant trigger on table "public"."purchases" to "authenticated";

grant truncate on table "public"."purchases" to "authenticated";

grant update on table "public"."purchases" to "authenticated";

grant delete on table "public"."purchases" to "service_role";

grant insert on table "public"."purchases" to "service_role";

grant references on table "public"."purchases" to "service_role";

grant select on table "public"."purchases" to "service_role";

grant trigger on table "public"."purchases" to "service_role";

grant truncate on table "public"."purchases" to "service_role";

grant update on table "public"."purchases" to "service_role";

create policy "Users can view their own purchases"
on "public"."purchases"
as permissive
for select
to public
using ((auth.uid() = user_id));



